apiVersion: apps/v1
kind: Deployment
metadata:
  name: litellm-proxy
  labels:
    app: litellm-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: litellm-proxy
  template:
    metadata:
      labels:
        app: litellm-proxy
    spec:
      containers:
      - name: litellm-proxy
        image: quay.io/takinosh/litellm-proxy:latest
        ports:
        - containerPort: 4000
          protocol: TCP
        resources:
          limits:
            cpu: "1000m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        readinessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 3
        env:
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: PORT
          value: "4000"
        - name: MASTER_KEY
          valueFrom:
            secretKeyRef:
              name: litellm-secrets
              key: master-key
        - name: CONFIG_PATH
          value: "/opt/app-root/src/config/proxy_server_config.yaml"
        volumeMounts:
        - name: config-volume
          mountPath: /opt/app-root/src/config
        - name: entrypoint-volume
          mountPath: /opt/app-root/src/docker/prod_entrypoint.sh
          subPath: prod_entrypoint.sh
        securityContext:
          runAsNonRoot: true
      serviceAccountName: litellm-proxy
      volumes:
      - name: config-volume
        configMap:
          name: litellm-config
          defaultMode: 0644
      - name: entrypoint-volume
        configMap:
          name: litellm-entrypoint
          defaultMode: 0755
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: litellm-proxy
---
apiVersion: v1
kind: Service
metadata:
  name: litellm-proxy
  labels:
    app: litellm-proxy
spec:
  ports:
  - port: 4000
    targetPort: 4000
    protocol: TCP
    name: http
  selector:
    app: litellm-proxy
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: litellm-proxy
spec:
  to:
    kind: Service
    name: litellm-proxy
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
